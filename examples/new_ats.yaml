dripline_mesh:
    broker: rabbit-broker
    queue: fast_daq
    max_payload_size : 1000000
    #make-connection: false

daq:
    activate-at-startup: true
    # n-files must be >= 1 in order to set a description on a run
    n-files: 1
    max-file-size-mb: 500
#    use-monarch: 1
use-relayer: true
streams:
   ch0:
       preset:
           type: ats-stream-custom
           nodes:
             - type: ats9462
               name: ats
             - type: frequency-transform
               name: fft
             # path 1: medium-res
             - type: power-averager
               name: avg
             - type: spectrum-relay
               name: relay
             # path 2: high-res
             - type: inverse-frequency-transform
               name: z # I can't name this ifft? not sure why
             - type: ats-streaming-writer
               name: writer
           connections:
             - "ats.out_0:fft.in_1"
             ## Path 1
             - "fft.out_0:avg.in_0"
             - "avg.out_0:relay.in_0"
             ## Path 2
             - "fft.out_0:z.in_0"
             - "z.out_0:writer.in_0"

       device:
          n-channels: 1
          bit-depth: 16
          data-type-size: 8
          sample-size: 2
          record-size: 500
          acq-rate: 50
          v-offset: 0.0
          v-range: 1.0

       ats:
           samples-per-buffer: 500000
           out-length: 200 #20 # number of buffers of node output to the next node
           dma-buffer-count: 100 #number of buffers between the ATS local memory and the node
           #reference-source: internal
           #samples-per-sec: 50000000 # 50 MSPS; good for internal reference
           reference-source: external_10MHz
           samples-per-sec: 150000000 # 150 MSPS: external-10MHz requires sampling at 150-180 MS/s in 1MS steps, allows decimation
           decimation-factor: 3
           acquisition-length-sec: 100.0
       fft:
           input-type: real
           fft-size: 500000 # needs to match above in ats
           #freq-in-center-bin: 10.59e6 # [Hz] before correction
           freq-in-center-bin: 10.68e6 # [Hz] after correction
           min-output-bandwidth: 200.e3 # 250 kHz total output (with 100 Hz bins, that means 2500 total bins in the output)
           samples-per-sec: 50000000 # 50 MSPS (must match ats above)
           freq-length: 400 # number of output buffers
       avg:
           spectrum-size: 2000 # needs to match the number of bins the fft node above produces
           num-output-buffers: 20
           num-to-average: 0 # 10000
       relay:
           spectrum-alert-rk: "spectra.medium_spectrum"
       z:
           time-length: 20
           fft-size: 2000 #must match avg.spectrum-size
       writer:
           device:
               bit-depth: 16
               data-type-size: 4
               sample-size: 2
               record-size: 2000
               acq-rate: 800.e3 # We have 100 kHz of complex output, 100 kHz of real and 100 kHz of quadrature samples...
               v-offset: 0.
               v-range: 1. # my data are already real values, what is this going to do?
           center-freq: 200.e3 # is this asking about the center frequency of the output band selected from the fft above?
           freq-range: 400.e3
